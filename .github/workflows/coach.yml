name: Coach Feed
 
on:
  push:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  coach:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Get changed files and diff
        run: |
          echo "## Changed files" > summary.md
          echo '```' >> summary.md
          if [ "${{ github.event_name }}" = "push" ]; then
            git diff --name-only HEAD~1 HEAD >> summary.md || echo "No files changed" >> summary.md
          else
            git diff --name-only HEAD~1 HEAD >> summary.md || echo "Scheduled run - no recent changes" >> summary.md
          fi
          echo '```' >> summary.md
          echo "" >> summary.md
          echo "## Recent diff" >> summary.md
          echo '```diff' >> summary.md
          if [ "${{ github.event_name }}" = "push" ]; then
            git diff HEAD~1 HEAD | head -50 >> summary.md || echo "No diff available" >> summary.md
          else
            echo "Scheduled run - monitoring for changes" >> summary.md
          fi
          echo '```' >> summary.md
          echo "" >> summary.md
          echo "Time: $(date -u)" >> summary.md

      - name: Find or create Coach Feed issue
        id: issue
        uses: actions/github-script@v7
        with:
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            
            let issue = issues.find(i => i.title === 'Coach Feed');
            
            if (!issue) {
              const { data: newIssue } = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Coach Feed',
                body: 'Automated code monitoring feed. This issue will receive updates on every push.'
              });
              issue = newIssue;
            }
            
            return issue.number;

      - name: Post to Coach Feed
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('summary.md', 'utf8');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.issue.outputs.result }},
              body: summary
            });
